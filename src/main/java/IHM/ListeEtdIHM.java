/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IHM;

import Entite.Etudiant;
import Entite.etdClass;
import client.Client;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Mohamed Hdilou
 */
public class ListeEtdIHM extends javax.swing.JFrame {

private ArrayList<etdClass> classes; // Variable pour stocker les classes
    private Client client; // Variable pour stocker l'instance Client

    /**
     * Creates new form EtdListeIHM
     */
    public ListeEtdIHM() throws RemoteException {
        initComponents();
        client = new Client();
        chargerClasses();
        chargerTableEtudiants();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    private void chargerClasses() throws RemoteException {
        classes = client.chargercmbClass();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (etdClass classe : classes) {
            model.addElement(classe.getNomClasse()); // Afficher le nom de la classe
        }
        cmbClass.setModel(model);
    }
    
    
    private void chargerTableEtudiants() {
        try {
            ArrayList<Etudiant> etudiants = client.afficherEtudiants();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0); // Effacer les anciennes données

            for (Etudiant etudiant : etudiants) {
                Object[] row = {
                    etudiant.getId(),
                    etudiant.getNom(),
                    etudiant.getPrenom(),
                    etudiant.getEmail(),
                    etudiant.getNomFiliere(), // Assurez-vous d'avoir ces getters dans votre classe Etudiant
                    etudiant.getNomClasse()  // Assurez-vous d'avoir ces getters dans votre classe Etudiant
                };
                model.addRow(row);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GestionEtdIHM.class.getName()).log(Level.SEVERE, null, ex);
            javax.swing.JOptionPane.showMessageDialog(this, "Erreur de récupération des étudiants.", "Erreur", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnAfficherParClasse = new javax.swing.JButton();
        cmbClass = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnImprimer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CodeEtudiant", "Nom", "Prenom", "Email", "Filier", "Classe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        btnAfficherParClasse.setBackground(new java.awt.Color(0, 153, 255));
        btnAfficherParClasse.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnAfficherParClasse.setForeground(new java.awt.Color(255, 255, 255));
        btnAfficherParClasse.setText("Étudiants de la classe :");
        btnAfficherParClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfficherParClasseActionPerformed(evt);
            }
        });

        cmbClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClassActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Consulter la liste des Etudiants");

        jButton1.setBackground(new java.awt.Color(51, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("rechercher un Etudiant par Nom :");

        btnImprimer.setBackground(new java.awt.Color(102, 153, 255));
        btnImprimer.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnImprimer.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimer.setText("Imprimer");
        btnImprimer.setActionCommand("impirimer");
        btnImprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnImprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(79, 79, 79))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnAfficherParClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAfficherParClasse))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimer)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAfficherParClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfficherParClasseActionPerformed
        try {
            // Récupérer la classe sélectionnée dans la combobox
            int idClasse = classes.get(cmbClass.getSelectedIndex()).getIdClasse();

            // Récupérer les étudiants de la classe sélectionnée
            ArrayList<Etudiant> etudiants = client.afficherEtudiantsParClasse(idClasse);

            // Effacer le tableau actuel
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);

            // Ajouter les étudiants au tableau
            for (Etudiant etudiant : etudiants) {
                Object[] row = {
                    etudiant.getId(),
                    etudiant.getNom(),
                    etudiant.getPrenom(),
                    etudiant.getEmail(),
                    etudiant.getNomFiliere(),
                    etudiant.getNomClasse()
                };
                model.addRow(row);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GestionEtdIHM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Erreur de connexion au serveur.", "Erreur", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_btnAfficherParClasseActionPerformed

    private void cmbClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClassActionPerformed

    private void btnImprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimerActionPerformed
 try {
        ArrayList<Etudiant> etudiants;
        String titre;
        
        // Vérifier si une classe est sélectionnée
        if (cmbClass.getSelectedIndex() > 0) {
            int idClasse = classes.get(cmbClass.getSelectedIndex()).getIdClasse();
            etudiants = client.afficherEtudiantsParClasse(idClasse);
            titre = "Liste des étudiants - Classe: " + cmbClass.getSelectedItem().toString();
        } else {
            etudiants = client.afficherEtudiants();
            titre = "Liste complète des étudiants";
        }
        
        if (etudiants.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "Aucun étudiant à imprimer", 
                "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        genererListePDF(etudiants, titre);
        
    } catch (RemoteException ex) {
        Logger.getLogger(ListeEtdIHM.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, 
            "Erreur de connexion au serveur", 
            "Erreur", JOptionPane.ERROR_MESSAGE);
    }    }//GEN-LAST:event_btnImprimerActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        try {
            ArrayList<Etudiant> etudiants = client.searchETD(txtSearch.getText().trim());
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0); // Effacer les anciennes données

            for (Etudiant etudiant : etudiants) {
                Object[] row = {
                    etudiant.getId(),
                    etudiant.getNom(),
                    etudiant.getPrenom(),
                    etudiant.getEmail(),
                    etudiant.getNomFiliere(), // Assurez-vous d'avoir ces getters dans votre classe Etudiant
                    etudiant.getNomClasse()  // Assurez-vous d'avoir ces getters dans votre classe Etudiant
                };
                model.addRow(row);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GestionEtdIHM.class.getName()).log(Level.SEVERE, null, ex);
            javax.swing.JOptionPane.showMessageDialog(this, "Erreur de récupération des étudiants.", "Erreur", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    
    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            this.dispose();
            new AdminAccueilIHM().setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
private void genererListePDF(ArrayList<Etudiant> etudiants, String titre) {
    Document document = new Document(PageSize.A4.rotate()); // Format paysage pour plus d'espace
    try {
        // Créer le dossier de sauvegarde
        new File("listes_etudiants").mkdir();
        
        // Nom du fichier avec date/heure
        String timestamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
        String filename = "listes_etudiants/ListeEtudiants_" + timestamp + ".pdf";
        
        PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(filename));
        document.open();
        
        // Police personnalisée
        Font fontTitre = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD, BaseColor.DARK_GRAY);
        Font fontHeader = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, BaseColor.WHITE);
        Font fontTexte = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL, BaseColor.BLACK);
        
        // En-tête
        Paragraph header = new Paragraph(titre, fontTitre);
        header.setAlignment(Element.ALIGN_CENTER);
        header.setSpacingAfter(20f);
        document.add(header);
        
        // Informations sur la génération
        Paragraph info = new Paragraph(
            "Généré le: " + new SimpleDateFormat("dd/MM/yyyy à HH:mm").format(new Date()) + 
            "\nNombre d'étudiants: " + etudiants.size(), 
            new Font(Font.FontFamily.HELVETICA, 10, Font.ITALIC));
        info.setAlignment(Element.ALIGN_RIGHT);
        info.setSpacingAfter(15f);
        document.add(info);
        
        // Création du tableau
        PdfPTable table = new PdfPTable(6); // 6 colonnes
        table.setWidthPercentage(100);
        table.setSpacingBefore(10f);
        
        // En-têtes du tableau
        String[] headers = {"ID", "Nom", "Prénom", "Email", "Filière", "Classe"};
        for (String headerText : headers) {
            PdfPCell cell = new PdfPCell(new Phrase(headerText, fontHeader));
            cell.setBackgroundColor(new BaseColor(70, 130, 180)); // Bleu
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setPadding(5);
            table.addCell(cell);
        }
        
        // Remplissage des données
        for (Etudiant etudiant : etudiants) {
            addCell(table, String.valueOf(etudiant.getId()), fontTexte);
            addCell(table, etudiant.getNom(), fontTexte);
            addCell(table, etudiant.getPrenom(), fontTexte);
            addCell(table, etudiant.getEmail(), fontTexte);
            addCell(table, etudiant.getNomFiliere(), fontTexte);
            addCell(table, etudiant.getNomClasse(), fontTexte);
        }
        
        document.add(table);
        
        // Pied de page
        Paragraph footer = new Paragraph(
            "Université XYZ - Service Scolarité", 
            new Font(Font.FontFamily.HELVETICA, 9, Font.ITALIC));
        footer.setAlignment(Element.ALIGN_CENTER);
        footer.setSpacingBefore(20f);
        document.add(footer);
        
        JOptionPane.showMessageDialog(this, 
            "Liste générée avec succès:\n" + new File(filename).getAbsolutePath(),
            "Succès", JOptionPane.INFORMATION_MESSAGE);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Erreur lors de la génération du PDF: " + e.getMessage(),
            "Erreur", JOptionPane.ERROR_MESSAGE);
    } finally {
        if (document.isOpen()) {
            document.close();
        }
    }
}
private void addCell(PdfPTable table, String text, Font font) {
    PdfPCell cell = new PdfPCell(new Phrase(text, font));
    cell.setPadding(5);
    table.addCell(cell);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListeEtdIHM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListeEtdIHM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListeEtdIHM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListeEtdIHM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ListeEtdIHM().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(ListeEtdIHM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfficherParClasse;
    private javax.swing.JButton btnImprimer;
    private javax.swing.JComboBox<String> cmbClass;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
